{"version":3,"file":"convert.js","sourceRoot":"","sources":["convert.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,WAAW,EACX,YAAY,EACZ,aAAa,EACb,YAAY,EACZ,UAAU,GACX,MAAM,IAAI,CAAC;AACZ,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AACtC,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAEzC,SAAS,IAAI;IACX,eAAe,EAAE,CAAC;IAClB,cAAc,EAAE,CAAC;AACnB,CAAC;AAED,IAAI,EAAE,CAAC;AAEP,SAAS,eAAe;IACtB,MAAM,UAAU,GAAG,WAAW,CAAC;IAC/B,MAAM,YAAY,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;IAE7C,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QAC5B,MAAM,QAAQ,GAAG,GAAG,UAAU,IAAI,IAAI,EAAE,CAAC;QAEzC,MAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;QAE5C,MAAM,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;QACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC,eAAe,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,eAAe,CAAC,YAAoB,EAAE,QAAgB;IAC7D,MAAM,YAAY,GAAG,UAAU,QAAQ,OAAO,CAAC;IAE/C,YAAY,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;IAC7C,MAAM,QAAQ,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;IAE5C,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;IAExC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAExC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;IAEtC,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/C,CAAC;AAED,SAAS,cAAc;IACrB,MAAM,YAAY,GAAG,iBAAiB,CAAC;IACvC,UAAU,CAAC,YAAY,CAAC,CAAC;IAEzB,MAAM,SAAS,GAAG,YAAY,CAAC,sBAAsB,CAAC,CAAC;IAEvD,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;IACzC,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACvC,MAAM,YAAY,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;IAEzC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;QAChC,MAAM,QAAQ,GAAG,gBAAgB,QAAQ,KAAK,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;QAChF,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/C,CAAC","sourcesContent":["import {\n  readdirSync,\n  readFileSync,\n  writeFileSync,\n  copyFileSync,\n  unlinkSync,\n} from \"fs\";\nimport { micromark } from \"micromark\";\nimport { parse } from \"node-html-parser\";\n\nfunction main() {\n  createHtmlFiles();\n  createIdexPage();\n}\n\nmain();\n\nfunction createHtmlFiles() {\n  const contentDir = \"./content\";\n  const contentFiles = readdirSync(contentDir);\n\n  contentFiles.forEach((file) => {\n    const filePath = `${contentDir}/${file}`;\n\n    const fileContents = readFileSync(filePath);\n\n    const htmlContents = micromark(fileContents.toString());\n    const fileName = file.split(\".\")[0];\n    writeToHtmlFile(htmlContents, fileName);\n  });\n}\n\nfunction writeToHtmlFile(htmlContents: string, fileName: string) {\n  const distFilePath = `./dist/${fileName}.html`;\n\n  copyFileSync(\"util/base.html\", distFilePath);\n  const baseHtml = readFileSync(distFilePath);\n\n  const root = parse(baseHtml.toString());\n\n  const body = root.querySelector(\"body\");\n\n  body.appendChild(parse(htmlContents));\n\n  writeFileSync(distFilePath, root.toString());\n}\n\nfunction createIdexPage() {\n  const distFilePath = \"dist/index.html\";\n  unlinkSync(distFilePath);\n\n  const indexPage = readFileSync(\"util/index_base.html\");\n\n  const root = parse(indexPage.toString());\n  const ul = root.getElementById(\"list\");\n  const allHtmlFiles = readdirSync(\"dist\");\n\n  allHtmlFiles.forEach((htmlFile) => {\n    const listItem = `<li><a href=\"${htmlFile}\">${htmlFile.split(\".\")[0]}</a></li>`;\n    ul.appendChild(parse(listItem));\n  });\n\n  writeFileSync(distFilePath, root.toString());\n}\n"]}