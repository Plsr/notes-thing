{"version":3,"file":"convert.js","sourceRoot":"","sources":["convert.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,WAAW,EACX,YAAY,EACZ,aAAa,EACb,UAAU,EACV,YAAY,GACb,MAAM,IAAI,CAAC;AACZ,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AACtC,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAEzC,MAAM,UAAU,GAAG,WAAW,CAAC;AAC/B,MAAM,YAAY,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;AAE7C,sBAAsB;AACtB,cAAc;AAEd,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;IAC5B,MAAM,QAAQ,GAAG,GAAG,UAAU,IAAI,IAAI,EAAE,CAAC;IAEzC,MAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;IAE5C,MAAM,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;IACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,eAAe,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC;AAEH,SAAS,eAAe,CAAC,YAAoB,EAAE,QAAgB;IAC7D,MAAM,YAAY,GAAG,UAAU,QAAQ,OAAO,CAAC;IAE/C,YAAY,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;IAC7C,MAAM,QAAQ,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;IAE5C,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;IAExC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAExC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;IAEtC,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/C,CAAC;AAED,SAAS,SAAS;IAChB,MAAM,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;IACxC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QACzB,MAAM,QAAQ,GAAG,UAAU,IAAI,EAAE,CAAC;QAClC,UAAU,CAAC,QAAQ,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import {\n  readdirSync,\n  readFileSync,\n  writeFileSync,\n  unlinkSync,\n  copyFileSync,\n} from \"fs\";\nimport { micromark } from \"micromark\";\nimport { parse } from \"node-html-parser\";\n\nconst contentDir = \"./content\";\nconst contentFiles = readdirSync(contentDir);\n\n// DEBUG, remove later\n//clearDist();\n\ncontentFiles.forEach((file) => {\n  const filePath = `${contentDir}/${file}`;\n\n  const fileContents = readFileSync(filePath);\n\n  const htmlContents = micromark(fileContents.toString());\n  const fileName = file.split(\".\")[0];\n  writeToHtmlFile(htmlContents, fileName);\n});\n\nfunction writeToHtmlFile(htmlContents: string, fileName: string) {\n  const distFilePath = `./dist/${fileName}.html`;\n\n  copyFileSync(\"util/base.html\", distFilePath);\n  const baseHtml = readFileSync(distFilePath);\n\n  const root = parse(baseHtml.toString());\n\n  const body = root.querySelector(\"body\");\n\n  body.appendChild(parse(htmlContents));\n\n  writeFileSync(distFilePath, root.toString());\n}\n\nfunction clearDist() {\n  const distFiles = readdirSync(\"./dist\");\n  distFiles.forEach((file) => {\n    const filePath = `./dist/${file}`;\n    unlinkSync(filePath);\n  });\n}\n"]}